// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');
var proofJSON = require('../../zokrates/code/square/proof.json');
//console.log(proofJSON)
// - use the contents from proof.json generated from zokrates steps
contract('Verifier', accounts => {
    const account_one = accounts[0];
    const correctProofJSONInput=proofJSON.inputs;
    const incorrectProofJSONInput=[2,1];

    describe('Checks for Verifier', function () {
        beforeEach(async function () {
            this.verifierContract = await Verifier.new({from: account_one});
        })

        it('correct proof', async function () {
          let result = await this.verifierContract.verifyTx.call(proofJSON.proof.a,proofJSON.proof.b,proofJSON.proof.c,correctProofJSONInput);
          assert.equal(result,true,"proof is invalid")
        })

        it('incorrect proof', async function () {
          let result = await this.verifierContract.verifyTx.call(proofJSON.proof.a,proofJSON.proof.b,proofJSON.proof.c,incorrectProofJSONInput);
          assert.equal(result,false,"proof is valid")
        })

    });

})
